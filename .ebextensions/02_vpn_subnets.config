Parameters:
  IntegrationName:
    Type: String
    Description: "Name of the Integration"
    Default: "victor-test"
  CIDRBlock:
    Type: String
    Description: "CIDR block selection used to create the network components where the application is deployed: ex: 172.17.4.0/24"
    Default: '172.17.1.0/24'



Resources:
  InternalSubnetAZ0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Select:
          - 0
          - Fn::Cidr:
            - Fn::Select:
              - 3
              - Fn::Cidr: [ { Ref: CIDRBlock }, 4, 6 ]
            - 4
            - 4
      VpcId:
        Fn::GetOptionSetting:
          Namespace: "aws:ec2:vpc"
          OptionName: "VPCId"
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: { Ref: 'AWS::Region' }
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Join: [ '/', [ 'Integration', { Ref: 'IntegrationName' }, 'InternalSubnetAZ0' ] ]
  InternalSubnetAZ0RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Fn::GetOptionSetting:
          Namespace: "aws:ec2:vpc"
          OptionName: "VPCId"
      Tags:
        - Key: Name
          Value:
            Fn::Join: [ '/', [ 'Integration', { Ref: 'IntegrationName' }, 'InternalSubnetAZ0' ] ]
  InternalSubnetAZ0RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: InternalSubnetAZ0RouteTable
      SubnetId:
        Ref: InternalSubnetAZ0

  InternalSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Select:
          - 1
          - Fn::Cidr:
            - Fn::Select:
                - 3
                - Fn::Cidr: [ { Ref: CIDRBlock }, 4, 6 ]
            - 4
            - 4
      VpcId:
        Fn::GetOptionSetting:
          Namespace: "aws:ec2:vpc"
          OptionName: "VPCId"
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: { Ref: 'AWS::Region' }
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Join: [ '/', [ 'Integration', { Ref: 'IntegrationName' }, 'InternalSubnetAZ1' ] ]
  InternalSubnetAZ1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Fn::GetOptionSetting:
          Namespace: "aws:ec2:vpc"
          OptionName: "VPCId"
      Tags:
        - Key: Name
          Value:
            Fn::Join: [ '/', [ 'Integration', { Ref: 'IntegrationName' }, 'InternalSubnetAZ0' ] ]
  InternalSubnetAZ1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: InternalSubnetAZ1RouteTable
      SubnetId:
        Ref: InternalSubnetAZ1

  InternalSubnetAZ2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock:
        Fn::Select:
          - 2
          - Fn::Cidr:
            - Fn::Select:
                - 3
                - Fn::Cidr: [ { Ref: CIDRBlock }, 4, 6 ]
            - 4
            - 4
      VpcId:
        Fn::GetOptionSetting:
          Namespace: "aws:ec2:vpc"
          OptionName: "VPCId"
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: { Ref: 'AWS::Region' }
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Join: [ '/', [ 'Integration', { Ref: 'IntegrationName' }, 'InternalSubnetAZ2' ] ]
  InternalSubnetAZ2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Fn::GetOptionSetting:
          Namespace: "aws:ec2:vpc"
          OptionName: "VPCId"
      Tags:
        - Key: Name
          Value:
            Fn::Join: [ '/', [ 'Integration', { Ref: 'IntegrationName' }, 'InternalSubnetAZ0' ] ]
  InternalSubnetAZ2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: InternalSubnetAZ2RouteTable
      SubnetId:
        Ref: InternalSubnetAZ2
