Parameters:
  NLBStaticIPs:
    Type: CommaDelimitedList
    Description: "Comma-delimited list of three IPs, one for each AZ/Subnet that will be used as fix IPs by NLB"
    Default: "172.17.1.205, 172.17.1.215, 172.17.1.230"

Resources:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Fn::GetOptionSetting:
          Namespace: "aws:ec2:vpc"
          OptionName: "VPCId"
      GroupDescription: Allows traffic from site-to-site VPN to NLB and EC2
      SecurityGroupIngress:
        - Description: Allow traffic from NLB Static IPs (AZ1), used for monitoring if the instance is healthy
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp:
            Fn::Sub:
              - '${NLBStaticIP}/32'
              - NLBStaticIP:
                  Fn::Select: [0, {'Ref': NLBStaticIPs}]
        - Description: Allow traffic from NLB Static IPs (AZ2), used for monitoring if the instance is healthy
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp:
            Fn::Sub:
              - '${NLBStaticIP}/32'
              - NLBStaticIP:
                  Fn::Select: [1, {'Ref': NLBStaticIPs}]
        - Description: Allow traffic from NLB Static IPs (AZ3), used for monitoring if the instance is healthy
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp:
            Fn::Sub:
              - '${NLBStaticIP}/32'
              - NLBStaticIP:
                  Fn::Select: [2, {'Ref': NLBStaticIPs}]
        - Description: Allow traffic from SBP network, the NLB forward the traffic from port 8081 to 80, but the IP is mentained
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp:
            Ref: VPNConnfigDestinationCidrBlock

  InternalNLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internal
      SubnetMappings:
        - SubnetId: { Ref: InternalSubnetAZ0}
          PrivateIPv4Address: {'Fn::Select': [0, {'Ref': NLBStaticIPs}]}
        - SubnetId: { Ref: InternalSubnetAZ1}
          PrivateIPv4Address: {'Fn::Select': [1, {'Ref': NLBStaticIPs}]}
        - SubnetId: { Ref: InternalSubnetAZ2}
          PrivateIPv4Address: {'Fn::Select': [2, {'Ref': NLBStaticIPs}]}
      Type: network
      LoadBalancerAttributes:
        - Key: load_balancing.cross_zone.enabled
          Value: true

  InternalTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: '/'
      HealthCheckPort: '80'
      HealthCheckProtocol: 'HTTP'
      Port: 80
      Protocol: TCP
      VpcId:
        Fn::GetOptionSetting:
          Namespace: "aws:ec2:vpc"
          OptionName: "VPCId"

  AWSEBV2LoadBalancerListenerInternal:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn:
        Ref: InternalNLB
      Port: 8081
      Protocol: 'TCP'
      DefaultActions:
        - Type: 'forward'
          TargetGroupArn:
            Ref: InternalTargetGroup