Parameters:
  VPNConfigBgpAsn:
    Type: Number
    Description: "ASN allocated to the VPN"
#    Default: 65000
    Default: 65001  # This is incorrect
  VPNConfigIpAddress:
    Type: String
    Description: "Public IP of the other party VPN Server"
#    Default: 185.136.42.1
    Default: 185.136.42.10  # This is incorrect
  VPNConnfigDestinationCidrBlock:
    Type: String
    Description: "CIDR block of the other party network"
    Default: 10.21.0.0/16

Resources:
  VPNGateway:
    Type: AWS::EC2::VPNGateway
    Properties:
      Type: ipsec.1
      Tags:
        - Key: Name
          Value:
            Fn::Join: [ ' ', [ { Ref: 'IntegrationName' }, 'site-to-site VPN' ] ]
  VPNCustomerGateway:
    Type: AWS::EC2::CustomerGateway
    Properties:
      BgpAsn:
        Ref: VPNConfigBgpAsn
      IpAddress:
        Ref: VPNConfigIpAddress
      Type: ipsec.1
      Tags:
        - Key: Name
          Value:
            Fn::Join: [ ' ', [ { Ref: 'IntegrationName' }, 'site-to-site VPN' ] ]
  VPNAttachmentToVPC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Fn::GetOptionSetting:
          Namespace: "aws:ec2:vpc"
          OptionName: "VPCId"
      VpnGatewayId:
        Ref: VPNGateway
  VPNConnection:
    Type: AWS::EC2::VPNConnection
    Properties:
      CustomerGatewayId:
        Ref: VPNCustomerGateway
      VpnGatewayId:
        Ref: VPNGateway
      Type: ipsec.1
      StaticRoutesOnly: true
      Tags:
        - Key: Name
          Value:
            Fn::Join: [ ' ', [ { Ref: 'IntegrationName' }, 'site-to-site VPN' ] ]
  VPNRoutePropagation:
    Type: AWS::EC2::VPNGatewayRoutePropagation
    DependsOn:
      - VPNAttachmentToVPC
    Properties:
      RouteTableIds:
        - Ref: InternalSubnetAZ0RouteTable
        - Ref: InternalSubnetAZ1RouteTable
        - Ref: InternalSubnetAZ2RouteTable
        - Fn::Select:
            - 0
            - Fn::GetOptionSetting:
                Namespace: "aws:ec2:vpc"
                OptionName: "Subnets"
        - Fn::Select:
            - 1
            - Fn::GetOptionSetting:
                Namespace: "aws:ec2:vpc"
                OptionName: "Subnets"
        - Fn::Select:
            - 2
            - Fn::GetOptionSetting:
                Namespace: "aws:ec2:vpc"
                OptionName: "Subnets"
      VpnGatewayId:
        Ref: VPNGateway
  VPNRoute:
    Type: AWS::EC2::VPNConnectionRoute
    DependsOn:
      - VPNRoutePropagation
    Properties:
      DestinationCidrBlock:
        Ref: VPNConnfigDestinationCidrBlock
      VpnConnectionId:
        Ref: VPNConnection
